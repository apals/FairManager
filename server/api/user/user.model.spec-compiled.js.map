{"version":3,"sources":["user.model.spec.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,GAAP,MAAgB,OAAhB;AACA,OAAO,IAAP,MAAiB,cAAjB;AACA,IAAI,IAAJ;AACA,IAAI,UAAU,YAAW;AACvB,SAAO,IAAI,IAAJ,CAAS;AACd,cAAU,OAAV;AACA,UAAM,WAAN;AACA,WAAO,kBAAP;AACA,cAAU,UAAV;GAJK,CAAP,CADuB;AAOvB,SAAO,IAAP,CAPuB;CAAX;;AAUd,SAAS,YAAT,EAAuB,YAAW;AAChC,SAAO,YAAW;;AAEhB,WAAO,KAAK,WAAL,EAAP,CAFgB;GAAX,CAAP,CADgC;;AAMhC,aAAW,YAAW;AACpB,cADoB;GAAX,CAAX,CANgC;;AAUhC,YAAU,YAAW;AACnB,WAAO,KAAK,WAAL,EAAP,CADmB;GAAX,CAAV,CAVgC;;AAchC,KAAG,4BAAH,EAAiC,YAAW;AAC1C,WAAO,KAAK,SAAL,CAAe,EAAf,EAAmB,MAAnB,CACJ,UADI,CACO,IADP,CACY,MADZ,CACmB,CADnB,CAAP,CAD0C;GAAX,CAAjC,CAdgC;;AAmBhC,KAAG,0CAAH,EAA+C,YAAW;AACxD,WAAO,KAAK,SAAL,GACJ,IADI,CACC,YAAW;AACf,UAAI,UAAU,SAAV,CADW;AAEf,aAAO,QAAQ,SAAR,EAAP,CAFe;KAAX,CADD,CAIF,MAJE,CAIK,EAJL,CAIQ,QAJR,CADiD;GAAX,CAA/C,CAnBgC;;AA2BhC,WAAS,QAAT,EAAmB,YAAW;AAC5B,OAAG,0CAAH,EAA+C,YAAW;AACxD,WAAK,KAAL,GAAa,EAAb,CADwD;AAExD,aAAO,KAAK,SAAL,GAAiB,MAAjB,CAAwB,EAAxB,CAA2B,QAA3B,CAFiD;KAAX,CAA/C,CAD4B;GAAX,CAAnB,CA3BgC;;AAkChC,WAAS,WAAT,EAAsB,YAAW;AAC/B,eAAW,YAAW;AACpB,aAAO,KAAK,SAAL,EAAP,CADoB;KAAX,CAAX,CAD+B;;AAK/B,OAAG,mCAAH,EAAwC,YAAW;AACjD,WAAK,YAAL,CAAkB,UAAlB,EAA8B,MAA9B,CAAqC,EAArC,CAAwC,IAAxC,CADiD;KAAX,CAAxC,CAL+B;;AAS/B,OAAG,yCAAH,EAA8C,YAAW;AACvD,WAAK,YAAL,CAAkB,MAAlB,EAA0B,MAA1B,CAAiC,GAAjC,CAAqC,EAArC,CAAwC,IAAxC,CADuD;KAAX,CAA9C,CAT+B;;AAa/B,OAAG,4DAAH,EAAiE,YAAW;AAC1E,WAAK,IAAL,GAAY,WAAZ,CAD0E;AAE1E,aAAO,KAAK,SAAL,GACJ,MADI,CACG,UAAS,CAAT,EAAY;AAClB,eAAO,EAAE,YAAF,CAAe,UAAf,CAAP,CADkB;OAAZ,CADH,CAGF,MAHE,CAGK,UAHL,CAGgB,EAHhB,CAGmB,IAHnB,CAFmE;KAAX,CAAjE,CAb+B;GAAX,CAAtB,CAlCgC;CAAX,CAAvB","file":"user.model.spec-compiled.js","sourcesContent":["'use strict';\n\nimport app from '../..';\nimport User from './user.model';\nvar user;\nvar genUser = function() {\n  user = new User({\n    provider: 'local',\n    name: 'Fake User',\n    email: 'test@example.com',\n    password: 'password'\n  });\n  return user;\n};\n\ndescribe('User Model', function() {\n  before(function() {\n    // Clear users before testing\n    return User.removeAsync();\n  });\n\n  beforeEach(function() {\n    genUser();\n  });\n\n  afterEach(function() {\n    return User.removeAsync();\n  });\n\n  it('should begin with no users', function() {\n    return User.findAsync({}).should\n      .eventually.have.length(0);\n  });\n\n  it('should fail when saving a duplicate user', function() {\n    return user.saveAsync()\n      .then(function() {\n        var userDup = genUser();\n        return userDup.saveAsync();\n      }).should.be.rejected;\n  });\n\n  describe('#email', function() {\n    it('should fail when saving without an email', function() {\n      user.email = '';\n      return user.saveAsync().should.be.rejected;\n    });\n  });\n\n  describe('#password', function() {\n    beforeEach(function() {\n      return user.saveAsync();\n    });\n\n    it('should authenticate user if valid', function() {\n      user.authenticate('password').should.be.true;\n    });\n\n    it('should not authenticate user if invalid', function() {\n      user.authenticate('blah').should.not.be.true;\n    });\n\n    it('should remain the same hash unless the password is updated', function() {\n      user.name = 'Test User';\n      return user.saveAsync()\n        .spread(function(u) {\n          return u.authenticate('password');\n        }).should.eventually.be.true;\n    });\n  });\n\n});\n"]}