{"version":3,"sources":["user.integration.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,GAAP,MAAgB,OAAhB;AACA,OAAO,IAAP,MAAiB,cAAjB;AACA,OAAO,OAAP,MAAoB,WAApB;;AAEA,SAAS,WAAT,EAAsB,YAAW;AAC/B,MAAI,IAAJ;;;AAD+B,QAI/B,CAAO,YAAW;AAChB,WAAO,KAAK,WAAL,GAAmB,IAAnB,CAAwB,YAAW;AACxC,aAAO,IAAI,IAAJ,CAAS;AACd,cAAM,WAAN;AACA,eAAO,kBAAP;AACA,kBAAU,UAAV;OAHK,CAAP,CADwC;;AAOxC,aAAO,KAAK,SAAL,EAAP,CAPwC;KAAX,CAA/B,CADgB;GAAX,CAAP;;;AAJ+B,OAiB/B,CAAM,YAAW;AACf,WAAO,KAAK,WAAL,EAAP,CADe;GAAX,CAAN,CAjB+B;;AAqB/B,WAAS,mBAAT,EAA8B,YAAW;AACvC,QAAI,KAAJ,CADuC;;AAGvC,WAAO,UAAS,IAAT,EAAe;AACpB,cAAQ,GAAR,EACG,IADH,CACQ,aADR,EAEG,IAFH,CAEQ;AACJ,eAAO,kBAAP;AACA,kBAAU,UAAV;OAJJ,EAMG,MANH,CAMU,GANV,EAOG,MAPH,CAOU,cAPV,EAO0B,MAP1B,EAQG,GARH,CAQO,CAAC,GAAD,EAAM,GAAN,KAAc;AACjB,gBAAQ,IAAI,IAAJ,CAAS,KAAT,CADS;AAEjB,eAFiB;OAAd,CARP,CADoB;KAAf,CAAP,CAHuC;;AAkBvC,OAAG,uDAAH,EAA4D,UAAS,IAAT,EAAe;AACzE,cAAQ,GAAR,EACG,GADH,CACO,eADP,EAEG,GAFH,CAEO,eAFP,EAEwB,YAAY,KAAZ,CAFxB,CAGG,MAHH,CAGU,GAHV,EAIG,MAJH,CAIU,cAJV,EAI0B,MAJ1B,EAKG,GALH,CAKO,CAAC,GAAD,EAAM,GAAN,KAAc;AACjB,YAAI,IAAJ,CAAS,GAAT,CAAa,QAAb,GAAwB,MAAxB,CAA+B,KAA/B,CAAqC,KAAK,GAAL,CAAS,QAAT,EAArC,EADiB;AAEjB,eAFiB;OAAd,CALP,CADyE;KAAf,CAA5D,CAlBuC;;AA8BvC,OAAG,kDAAH,EAAuD,UAAS,IAAT,EAAe;AACpE,cAAQ,GAAR,EACG,GADH,CACO,eADP,EAEG,MAFH,CAEU,GAFV,EAGG,GAHH,CAGO,IAHP,EADoE;KAAf,CAAvD,CA9BuC;GAAX,CAA9B,CArB+B;CAAX,CAAtB","file":"user.integration-compiled.js","sourcesContent":["'use strict';\n\nimport app from '../..';\nimport User from './user.model';\nimport request from 'supertest';\n\ndescribe('User API:', function() {\n  var user;\n\n  // Clear users before testing\n  before(function() {\n    return User.removeAsync().then(function() {\n      user = new User({\n        name: 'Fake User',\n        email: 'test@example.com',\n        password: 'password'\n      });\n\n      return user.saveAsync();\n    });\n  });\n\n  // Clear users after testing\n  after(function() {\n    return User.removeAsync();\n  });\n\n  describe('GET /api/users/me', function() {\n    var token;\n\n    before(function(done) {\n      request(app)\n        .post('/auth/local')\n        .send({\n          email: 'test@example.com',\n          password: 'password'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          token = res.body.token;\n          done();\n        });\n    });\n\n    it('should respond with a user profile when authenticated', function(done) {\n      request(app)\n        .get('/api/users/me')\n        .set('authorization', 'Bearer ' + token)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          res.body._id.toString().should.equal(user._id.toString());\n          done();\n        });\n    });\n\n    it('should respond with a 401 when not authenticated', function(done) {\n      request(app)\n        .get('/api/users/me')\n        .expect(401)\n        .end(done);\n    });\n  });\n});\n"]}