{"version":3,"sources":["personnel.controller.js"],"names":[],"mappings":"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","file":"personnel.controller-compiled.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/personnel              ->  index\n * POST    /api/personnel              ->  create\n * GET     /api/personnel/:id          ->  show\n * PUT     /api/personnel/:id          ->  update\n * DELETE  /api/personnel/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Personnel from './personnel.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.saveAsync()\n      .spread(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.removeAsync()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Personnels\nexport function index(req, res) {\n  Personnel.findAsync()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Personnel from the DB\nexport function show(req, res) {\n  Personnel.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Personnel in the DB\nexport function create(req, res) {\n  Personnel.createAsync(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Personnel in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  Personnel.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Personnel from the DB\nexport function destroy(req, res) {\n  Personnel.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}