{"version":3,"sources":["personnel.integration.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,MAAM,QAAQ,iBAAR,CAAN;AACJ,OAAO,OAAP,MAAoB,WAApB;;AAEA,IAAI,YAAJ;;AAEA,SAAS,gBAAT,EAA2B,YAAW;;AAEpC,WAAS,oBAAT,EAA+B,YAAW;AACxC,QAAI,UAAJ,CADwC;;AAGxC,eAAW,UAAS,IAAT,EAAe;AACxB,cAAQ,GAAR,EACG,GADH,CACO,gBADP,EAEG,MAFH,CAEU,GAFV,EAGG,MAHH,CAGU,cAHV,EAG0B,MAH1B,EAIG,GAJH,CAIO,CAAC,GAAD,EAAM,GAAN,KAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,qBAAa,IAAI,IAAJ,CAJI;AAKjB,eALiB;OAAd,CAJP,CADwB;KAAf,CAAX,CAHwC;;AAiBxC,OAAG,gCAAH,EAAqC,YAAW;AAC9C,iBAAW,MAAX,CAAkB,EAAlB,CAAqB,UAArB,CAAgC,KAAhC,EAD8C;KAAX,CAArC,CAjBwC;GAAX,CAA/B,CAFoC;;AAyBpC,WAAS,qBAAT,EAAgC,YAAW;AACzC,eAAW,UAAS,IAAT,EAAe;AACxB,cAAQ,GAAR,EACG,IADH,CACQ,gBADR,EAEG,IAFH,CAEQ;AACJ,cAAM,eAAN;AACA,cAAM,oCAAN;OAJJ,EAMG,MANH,CAMU,GANV,EAOG,MAPH,CAOU,cAPV,EAO0B,MAP1B,EAQG,GARH,CAQO,CAAC,GAAD,EAAM,GAAN,KAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,uBAAe,IAAI,IAAJ,CAJE;AAKjB,eALiB;OAAd,CARP,CADwB;KAAf,CAAX,CADyC;;AAmBzC,OAAG,iDAAH,EAAsD,YAAW;AAC/D,mBAAa,IAAb,CAAkB,MAAlB,CAAyB,KAAzB,CAA+B,eAA/B,EAD+D;AAE/D,mBAAa,IAAb,CAAkB,MAAlB,CAAyB,KAAzB,CAA+B,oCAA/B,EAF+D;KAAX,CAAtD,CAnByC;GAAX,CAAhC,CAzBoC;;AAmDpC,WAAS,wBAAT,EAAmC,YAAW;AAC5C,QAAI,SAAJ,CAD4C;;AAG5C,eAAW,UAAS,IAAT,EAAe;AACxB,cAAQ,GAAR,EACG,GADH,CACO,oBAAoB,aAAa,GAAb,CAD3B,CAEG,MAFH,CAEU,GAFV,EAGG,MAHH,CAGU,cAHV,EAG0B,MAH1B,EAIG,GAJH,CAIO,CAAC,GAAD,EAAM,GAAN,KAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,oBAAY,IAAI,IAAJ,CAJK;AAKjB,eALiB;OAAd,CAJP,CADwB;KAAf,CAAX,CAH4C;;AAiB5C,cAAU,YAAW;AACnB,kBAAY,EAAZ,CADmB;KAAX,CAAV,CAjB4C;;AAqB5C,OAAG,6CAAH,EAAkD,YAAW;AAC3D,gBAAU,IAAV,CAAe,MAAf,CAAsB,KAAtB,CAA4B,eAA5B,EAD2D;AAE3D,gBAAU,IAAV,CAAe,MAAf,CAAsB,KAAtB,CAA4B,oCAA5B,EAF2D;KAAX,CAAlD,CArB4C;GAAX,CAAnC,CAnDoC;;AA+EpC,WAAS,wBAAT,EAAmC,YAAW;AAC5C,QAAI,gBAAJ,CAD4C;;AAG5C,eAAW,UAAS,IAAT,EAAe;AACxB,cAAQ,GAAR,EACG,GADH,CACO,oBAAoB,aAAa,GAAb,CAD3B,CAEG,IAFH,CAEQ;AACJ,cAAM,mBAAN;AACA,cAAM,kCAAN;OAJJ,EAMG,MANH,CAMU,GANV,EAOG,MAPH,CAOU,cAPV,EAO0B,MAP1B,EAQG,GARH,CAQO,UAAS,GAAT,EAAc,GAAd,EAAmB;AACtB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,2BAAmB,IAAI,IAAJ,CAJG;AAKtB,eALsB;OAAnB,CARP,CADwB;KAAf,CAAX,CAH4C;;AAqB5C,cAAU,YAAW;AACnB,yBAAmB,EAAnB,CADmB;KAAX,CAAV,CArB4C;;AAyB5C,OAAG,2CAAH,EAAgD,YAAW;AACzD,uBAAiB,IAAjB,CAAsB,MAAtB,CAA6B,KAA7B,CAAmC,mBAAnC,EADyD;AAEzD,uBAAiB,IAAjB,CAAsB,MAAtB,CAA6B,KAA7B,CAAmC,kCAAnC,EAFyD;KAAX,CAAhD,CAzB4C;GAAX,CAAnC,CA/EoC;;AA+GpC,WAAS,2BAAT,EAAsC,YAAW;;AAE/C,OAAG,+CAAH,EAAoD,UAAS,IAAT,EAAe;AACjE,cAAQ,GAAR,EACG,MADH,CACU,oBAAoB,aAAa,GAAb,CAD9B,CAEG,MAFH,CAEU,GAFV,EAGG,GAHH,CAGO,CAAC,GAAD,EAAM,GAAN,KAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,eAJiB;OAAd,CAHP,CADiE;KAAf,CAApD,CAF+C;;AAc/C,OAAG,uDAAH,EAA4D,UAAS,IAAT,EAAe;AACzE,cAAQ,GAAR,EACG,MADH,CACU,oBAAoB,aAAa,GAAb,CAD9B,CAEG,MAFH,CAEU,GAFV,EAGG,GAHH,CAGO,CAAC,GAAD,EAAM,GAAN,KAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,eAJiB;OAAd,CAHP,CADyE;KAAf,CAA5D,CAd+C;GAAX,CAAtC,CA/GoC;CAAX,CAA3B","file":"personnel.integration-compiled.js","sourcesContent":["'use strict';\n\nvar app = require('../../../server');\nimport request from 'supertest';\n\nvar newPersonnel;\n\ndescribe('Personnel API:', function() {\n\n  describe('GET /api/personnel', function() {\n    var personnels;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/personnel')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          personnels = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      personnels.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/personnel', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/personnel')\n        .send({\n          name: 'New Personnel',\n          info: 'This is the brand new personnel!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newPersonnel = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created personnel', function() {\n      newPersonnel.name.should.equal('New Personnel');\n      newPersonnel.info.should.equal('This is the brand new personnel!!!');\n    });\n\n  });\n\n  describe('GET /api/personnel/:id', function() {\n    var personnel;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/personnel/' + newPersonnel._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          personnel = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      personnel = {};\n    });\n\n    it('should respond with the requested personnel', function() {\n      personnel.name.should.equal('New Personnel');\n      personnel.info.should.equal('This is the brand new personnel!!!');\n    });\n\n  });\n\n  describe('PUT /api/personnel/:id', function() {\n    var updatedPersonnel;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/personnel/' + newPersonnel._id)\n        .send({\n          name: 'Updated Personnel',\n          info: 'This is the updated personnel!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedPersonnel = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedPersonnel = {};\n    });\n\n    it('should respond with the updated personnel', function() {\n      updatedPersonnel.name.should.equal('Updated Personnel');\n      updatedPersonnel.info.should.equal('This is the updated personnel!!!');\n    });\n\n  });\n\n  describe('DELETE /api/personnel/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/personnel/' + newPersonnel._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when personnel does not exist', function(done) {\n      request(app)\n        .delete('/api/personnel/' + newPersonnel._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}