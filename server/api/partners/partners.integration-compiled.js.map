{"version":3,"sources":["partners.integration.js"],"names":[],"mappings":"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","file":"partners.integration-compiled.js","sourcesContent":["'use strict';\n\nvar app = require('../../../server');\nimport request from 'supertest';\n\nvar newPartners;\n\ndescribe('Partners API:', function() {\n\n  describe('GET /api/partners', function() {\n    var partnerss;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/partners')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          partnerss = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      partnerss.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/partners', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/partners')\n        .send({\n          name: 'New Partners',\n          info: 'This is the brand new partners!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newPartners = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created partners', function() {\n      newPartners.name.should.equal('New Partners');\n      newPartners.info.should.equal('This is the brand new partners!!!');\n    });\n\n  });\n\n  describe('GET /api/partners/:id', function() {\n    var partners;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/partners/' + newPartners._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          partners = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      partners = {};\n    });\n\n    it('should respond with the requested partners', function() {\n      partners.name.should.equal('New Partners');\n      partners.info.should.equal('This is the brand new partners!!!');\n    });\n\n  });\n\n  describe('PUT /api/partners/:id', function() {\n    var updatedPartners;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/partners/' + newPartners._id)\n        .send({\n          name: 'Updated Partners',\n          info: 'This is the updated partners!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedPartners = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedPartners = {};\n    });\n\n    it('should respond with the updated partners', function() {\n      updatedPartners.name.should.equal('Updated Partners');\n      updatedPartners.info.should.equal('This is the updated partners!!!');\n    });\n\n  });\n\n  describe('DELETE /api/partners/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/partners/' + newPartners._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when partners does not exist', function(done) {\n      request(app)\n        .delete('/api/partners/' + newPartners._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}